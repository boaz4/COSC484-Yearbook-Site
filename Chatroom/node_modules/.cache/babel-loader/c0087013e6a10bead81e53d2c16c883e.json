{"ast":null,"code":"var _jsxFileName = \"/Users/boazd_000/Documents/COSC484/chatrepo/COSC484-Yearbook-Site/Chatroom/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nimport http from \"http\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport cors from \"cors\";\nimport socketio from \"socket.io\"; // // mongo connection\n// import \"./config/mongo.js\";\n// // socket configuration\n// import WebSockets from \"./utils/WebSockets.js\";\n// // routes\n// import indexRouter from \"./routes/index.js\";\n// import userRouter from \"./routes/user.js\";\n// import chatRoomRouter from \"./routes/chatRoom.js\";\n// import deleteRouter from \"./routes/delete.js\";\n// // middlewares\n// import { decode } from './middlewares/jwt.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = express();\n/** Get port from environment and store in Express. */\n\nconst port = process.env.PORT || \"3000\";\napp.set(\"port\", port);\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(\"/\", indexRouter);\napp.use(\"/users\", userRouter);\napp.use(\"/room\", decode, chatRoomRouter);\napp.use(\"/delete\", deleteRouter);\n/** catch 404 and forward to error handler */\n\napp.use('*', (req, res) => {\n  return res.status(404).json({\n    success: false,\n    message: 'API endpoint doesnt exist'\n  });\n});\n/** Create HTTP server. */\n\nconst server = http.createServer(app);\n/** Create socket connection */\n\nglobal.io = socketio.listen(server);\nglobal.io.on('connection', WebSockets.connection);\n/** Listen on provided port, on all network interfaces. */\n\nserver.listen(port);\n/** Event listener for HTTP server \"listening\" event. */\n\nserver.on(\"listening\", () => {\n  console.log(`Listening on port:: http://localhost:${port}/`);\n}); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/boazd_000/Documents/COSC484/chatrepo/COSC484-Yearbook-Site/Chatroom/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById","http","express","logger","cors","socketio","app","port","process","env","PORT","set","use","json","urlencoded","extended","indexRouter","userRouter","decode","chatRoomRouter","deleteRouter","req","res","status","success","message","server","createServer","global","io","listen","on","WebSockets","connection","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AASA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAIA,MAAMC,GAAG,GAAGJ,OAAO,EAAnB;AAEA;;AACA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,MAAjC;AACAJ,GAAG,CAACK,GAAJ,CAAQ,MAAR,EAAgBJ,IAAhB;AAEAD,GAAG,CAACM,GAAJ,CAAQT,MAAM,CAAC,KAAD,CAAd;AACAG,GAAG,CAACM,GAAJ,CAAQV,OAAO,CAACW,IAAR,EAAR;AACAP,GAAG,CAACM,GAAJ,CAAQV,OAAO,CAACY,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AAEAT,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAaI,WAAb;AACAV,GAAG,CAACM,GAAJ,CAAQ,QAAR,EAAkBK,UAAlB;AACAX,GAAG,CAACM,GAAJ,CAAQ,OAAR,EAAiBM,MAAjB,EAAyBC,cAAzB;AACAb,GAAG,CAACM,GAAJ,CAAQ,SAAR,EAAmBQ,YAAnB;AAEA;;AACAd,GAAG,CAACM,GAAJ,CAAQ,GAAR,EAAa,CAACS,GAAD,EAAMC,GAAN,KAAc;AACzB,SAAOA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB;AAC1BW,IAAAA,OAAO,EAAE,KADiB;AAE1BC,IAAAA,OAAO,EAAE;AAFiB,GAArB,CAAP;AAID,CALD;AAOA;;AACA,MAAMC,MAAM,GAAGzB,IAAI,CAAC0B,YAAL,CAAkBrB,GAAlB,CAAf;AACA;;AACAsB,MAAM,CAACC,EAAP,GAAYxB,QAAQ,CAACyB,MAAT,CAAgBJ,MAAhB,CAAZ;AACAE,MAAM,CAACC,EAAP,CAAUE,EAAV,CAAa,YAAb,EAA2BC,UAAU,CAACC,UAAtC;AACA;;AACAP,MAAM,CAACI,MAAP,CAAcvB,IAAd;AACA;;AACAmB,MAAM,CAACK,EAAP,CAAU,WAAV,EAAuB,MAAM;AAC3BG,EAAAA,OAAO,CAACC,GAAR,CAAa,wCAAuC5B,IAAK,GAAzD;AACD,CAFD,E,CAOA;AACA;AACA;;AACAV,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\nimport http from \"http\";\nimport express from \"express\";\nimport logger from \"morgan\";\nimport cors from \"cors\";\nimport socketio from \"socket.io\";\n// // mongo connection\n// import \"./config/mongo.js\";\n// // socket configuration\n// import WebSockets from \"./utils/WebSockets.js\";\n// // routes\n// import indexRouter from \"./routes/index.js\";\n// import userRouter from \"./routes/user.js\";\n// import chatRoomRouter from \"./routes/chatRoom.js\";\n// import deleteRouter from \"./routes/delete.js\";\n// // middlewares\n// import { decode } from './middlewares/jwt.js'\n\n\n\nconst app = express();\n\n/** Get port from environment and store in Express. */\nconst port = process.env.PORT || \"3000\";\napp.set(\"port\", port);\n\napp.use(logger(\"dev\"));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use(\"/\", indexRouter);\napp.use(\"/users\", userRouter);\napp.use(\"/room\", decode, chatRoomRouter);\napp.use(\"/delete\", deleteRouter);\n\n/** catch 404 and forward to error handler */\napp.use('*', (req, res) => {\n  return res.status(404).json({\n    success: false,\n    message: 'API endpoint doesnt exist'\n  })\n});\n\n/** Create HTTP server. */\nconst server = http.createServer(app);\n/** Create socket connection */\nglobal.io = socketio.listen(server);\nglobal.io.on('connection', WebSockets.connection)\n/** Listen on provided port, on all network interfaces. */\nserver.listen(port);\n/** Event listener for HTTP server \"listening\" event. */\nserver.on(\"listening\", () => {\n  console.log(`Listening on port:: http://localhost:${port}/`)\n});\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}