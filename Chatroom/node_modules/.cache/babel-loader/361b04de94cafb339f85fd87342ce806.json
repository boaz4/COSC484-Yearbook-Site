{"ast":null,"code":"import mongoose from 'mongoose';\nimport config from './index.js';\nconst CONNECTION_URL = \"mongodb+srv://cluster0.sslph.mongodb.net/myFirstDatabase --username admin -p admin\";\nmongoose.connect(CONNECTION_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nmongoose.connection.on('connected', () => {\n  console.log('Mongo has connected succesfully');\n});\nmongoose.connection.on('reconnected', () => {\n  console.log('Mongo has reconnected');\n});\nmongoose.connection.on('error', error => {\n  console.log('Mongo connection has an error', error);\n  mongoose.disconnect();\n});\nmongoose.connection.on('disconnected', () => {\n  console.log('Mongo connection is disconnected');\n});","map":{"version":3,"sources":["/Users/boazd_000/Documents/COSC484/chatrepo/COSC484-Yearbook-Site/Chatroom/src/mongo.js"],"names":["mongoose","config","CONNECTION_URL","connect","useNewUrlParser","useUnifiedTopology","connection","on","console","log","error","disconnect"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,MAAMC,cAAc,GAAG,oFAAvB;AACAF,QAAQ,CAACG,OAAT,CAAiBD,cAAjB,EAAiC;AAC/BE,EAAAA,eAAe,EAAE,IADc;AAE/BC,EAAAA,kBAAkB,EAAE;AAFW,CAAjC;AAKAL,QAAQ,CAACM,UAAT,CAAoBC,EAApB,CAAuB,WAAvB,EAAoC,MAAM;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACD,CAFD;AAGAT,QAAQ,CAACM,UAAT,CAAoBC,EAApB,CAAuB,aAAvB,EAAsC,MAAM;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,CAFD;AAGAT,QAAQ,CAACM,UAAT,CAAoBC,EAApB,CAAuB,OAAvB,EAAgCG,KAAK,IAAI;AACvCF,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CC,KAA7C;AACAV,EAAAA,QAAQ,CAACW,UAAT;AACD,CAHD;AAIAX,QAAQ,CAACM,UAAT,CAAoBC,EAApB,CAAuB,cAAvB,EAAuC,MAAM;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,CAFD","sourcesContent":["import mongoose from 'mongoose'\nimport config from './index.js'\n\nconst CONNECTION_URL = \"mongodb+srv://cluster0.sslph.mongodb.net/myFirstDatabase --username admin -p admin\";\nmongoose.connect(CONNECTION_URL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n\nmongoose.connection.on('connected', () => {\n  console.log('Mongo has connected succesfully')\n})\nmongoose.connection.on('reconnected', () => {\n  console.log('Mongo has reconnected')\n})\nmongoose.connection.on('error', error => {\n  console.log('Mongo connection has an error', error)\n  mongoose.disconnect()\n})\nmongoose.connection.on('disconnected', () => {\n  console.log('Mongo connection is disconnected')\n})"]},"metadata":{},"sourceType":"module"}